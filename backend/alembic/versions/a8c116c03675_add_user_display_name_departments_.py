"""Add user display name, departments, business groups, and notifications

Revision ID: a8c116c03675
Revises: 6b374d1124be
Create Date: 2025-10-15 13:54:58.479005

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a8c116c03675'
down_revision = '6b374d1124be'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create department table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS department (
            id UUID NOT NULL,
            name VARCHAR NOT NULL,
            description TEXT,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
            PRIMARY KEY (id),
            UNIQUE (name)
        )
    """)
    
    # Create business_group table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS business_group (
            id UUID NOT NULL,
            name VARCHAR NOT NULL,
            description TEXT,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
            PRIMARY KEY (id),
            UNIQUE (name)
        )
    """)
    
    # Create notification table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS notification (
            id UUID NOT NULL,
            user_id UUID NOT NULL,
            type VARCHAR NOT NULL,
            title VARCHAR NOT NULL,
            message TEXT NOT NULL,
            project_id UUID,
            is_read BOOLEAN DEFAULT false,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
            PRIMARY KEY (id),
            FOREIGN KEY (project_id) REFERENCES project (id) ON DELETE CASCADE,
            FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE CASCADE
        )
    """)
    
    # Add columns to app_user table if they don't exist
    op.execute("ALTER TABLE app_user ADD COLUMN IF NOT EXISTS display_name VARCHAR")
    op.execute("ALTER TABLE app_user ADD COLUMN IF NOT EXISTS department_id UUID")
    op.execute("ALTER TABLE app_user ADD COLUMN IF NOT EXISTS business_group_id UUID")
    
    # Add foreign key constraints if they don't exist
    try:
        op.execute("ALTER TABLE app_user ADD CONSTRAINT app_user_department_id_fkey FOREIGN KEY (department_id) REFERENCES department (id)")
    except Exception:
        pass  # Constraint already exists
    
    try:
        op.execute("ALTER TABLE app_user ADD CONSTRAINT app_user_business_group_id_fkey FOREIGN KEY (business_group_id) REFERENCES business_group (id)")
    except Exception:
        pass  # Constraint already exists
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign key constraints
    op.drop_constraint(None, 'app_user', type_='foreignkey')
    op.drop_constraint(None, 'app_user', type_='foreignkey')
    
    # Drop columns from app_user table
    op.drop_column('app_user', 'business_group_id')
    op.drop_column('app_user', 'department_id')
    op.drop_column('app_user', 'display_name')
    
    # Drop tables
    op.drop_table('notification')
    op.drop_table('business_group')
    op.drop_table('department')
    # ### end Alembic commands ###
